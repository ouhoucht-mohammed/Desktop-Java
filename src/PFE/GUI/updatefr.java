

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PFE.GUI;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import static com.itextpdf.text.Element.ALIGN_MIDDLE;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import jxl.Workbook;
import jxl.format.Alignment;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.format.Colour;
import jxl.format.UnderlineStyle;
import jxl.format.VerticalAlignment;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author MOHAMED
 */
public class updatefr extends javax.swing.JFrame {

    /**
     * Creates new form updatefr
     */
    
    
    
    
     private  static   int tr=0;
     private  static   Object[] row = new Object[8];
     private  static   DefaultTableModel  mode;
     private  static   Fournisseur   fr;



     
     
     
private  String  IdFr;
private  String  NomFr;
private  String  CategFr;
private  String  Tel1 ;
private  String  Tel2 ;
private  String  Fax1 ;
private  String  Fax2 ;
private  String  adresse ;

    /**
     *
     */
    public   static String liste_item;
    
    /**
     * constructeur     sans param
     */
    public updatefr() {
          initComponents();
          liste_item=(String) list.getSelectedItem();
          saisir.setBorder(BorderFactory.createLineBorder(new Color(45,118,223)));
          mode=(DefaultTableModel)  tab.getModel();
          
          
          
          fr =new Fournisseur();
          
          
          
          }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @param IdFr
     */
    
    
    
    
    
    
   public  static void  AffichIdFr(String IdFr){
       
       
       
       
       
       
       
    if(tr==0){
           
   Fournisseur  FR;     
 
   if((FR=fr.RechIdFr(IdFr))!=null){
      
  
  
   row[0]=FR.getIdFr();
   row[1]=FR.getNomFr();
   row[2]=FR.getCategFr();
   row[3]=FR.getTel1();
   row[4]=FR.getTel2();
   row[5]=FR.getFax1();
   row[6]=FR.getFax2();
   row[7]=FR.getAdresse();
   mode.addRow(row);
  
    if(mode.getRowCount()>=2){
  
       mode.removeRow(0);
   } 
     
   }else{
       
    mode.setRowCount(0);
        
   } 
   
  tr=1;
  return;
  }
    
    
    else if(tr==1){
        tr=0;
        mode.setRowCount(0);
        AffichIdFr(IdFr);
        
          }
   

     

   
   
   
   
   
   
       

      } 

    /**
     *
     * @param NomFr
     */
    public static  void  AffichNomFr(String NomFr){
   ArrayList   <Fournisseur>  Mylist = (fr.RechNomFr(NomFr));

 if(tr==0){
   if(Mylist!=null){
   for(Fournisseur    fr: Mylist){   
   row[0]=fr.getIdFr();
   row[1]=fr.getNomFr();
   row[2]=fr.getCategFr();
   row[3]=fr.getTel1();
   row[4]=fr.getTel2();
   row[5]=fr.getFax1();
   row[6]=fr.getFax2();
   row[7]=fr.getAdresse();
   mode.addRow(row);
   }
  
   }else{
   mode.setRowCount(0);
   
   }       
   tr=1;    
    return ;
 }
 
 else if(tr==1){
        tr=0;
        mode.setRowCount(0);
        AffichNomFr(NomFr);
  
 }      
       
       
       
       
       
       
    
       
       
       
       
   }

    /**
     *
     * @param CategFr
     */
    public static  void  AffichCategFr(String   CategFr){
       
      ArrayList   <Fournisseur>  Mylist_Categ = (fr.RechCategFr(CategFr));

 if(tr==0){
   if(Mylist_Categ!=null){
   for(Fournisseur    fr: Mylist_Categ){   
   row[0]=fr.getIdFr();
   row[1]=fr.getNomFr();
   row[2]=fr.getCategFr();
   row[3]=fr.getTel1();
   row[4]=fr.getTel2();
   row[5]=fr.getFax1();
   row[6]=fr.getFax2();
   row[7]=fr.getAdresse();
   mode.addRow(row);}
  
   }else{
   mode.setRowCount(0);
   
   }       
   tr=1;    
    return ;
 }
 
 else if(tr==1){
        tr=0;
        mode.setRowCount(0);
        AffichCategFr(CategFr);
  
 }      
        
       
       
       
   }

    /**
     * cette  methode  type  Void   permet   d'afficher  la liste des Fournisseurs
     */
    public static void  AffichToutesFr(){
       
      ArrayList   <Fournisseur>  Mylist_Categ = (fr.RechToutesFr());

 if(tr==0){
   if(Mylist_Categ!=null){
   for(Fournisseur    fr: Mylist_Categ){   
   row[0]=fr.getIdFr();
   row[1]=fr.getNomFr();
   row[2]=fr.getCategFr();
   row[3]=fr.getTel1();
   row[4]=fr.getTel2();
   row[5]=fr.getFax1();
   row[6]=fr.getFax2();
   row[7]=fr.getAdresse();
   mode.addRow(row);}
  
   }else{
   mode.setRowCount(0);
   
   }       
   tr=1;    
    return ;
 }
 
 else if(tr==1){
        tr=0;
        mode.setRowCount(0);
        AffichToutesFr();
  
 }      
        
       
       
       
   }

   
    
    
    
    
    
    
    
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        list = new javax.swing.JComboBox<>();
        saisir = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        supprimer = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        Fermer = new javax.swing.JButton();
        pdf = new javax.swing.JButton();
        execl = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Choisir le crit√®re de recherche :  ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, 30));

        list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nom Fr", "Id Fr", "Categorie Fr", "Toutes Fr" }));
        list.setFocusCycleRoot(true);
        getContentPane().add(list, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 170, 30));

        saisir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saisirActionPerformed(evt);
            }
        });
        getContentPane().add(saisir, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 280, 30));

        search.setText("Rechercher");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 103, 150, 30));

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdFr", "NomFr", "CategFr", "Tel1Fr", "Tel2Fr", "Fax1Fr", "Fax2Fr", "AdrFr"
            }
        ));
        jScrollPane1.setViewportView(tab);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 900, 280));

        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        getContentPane().add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 120, 30));

        modifier.setText("Modifier");
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });
        getContentPane().add(modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 470, 120, 30));

        Fermer.setText("Fermer");
        Fermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FermerActionPerformed(evt);
            }
        });
        getContentPane().add(Fermer, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 470, 120, 30));

        pdf.setText("PDF");
        pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfActionPerformed(evt);
            }
        });
        getContentPane().add(pdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 250, 62, -1));

        execl.setText("EXCEL");
        execl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                execlActionPerformed(evt);
            }
        });
        getContentPane().add(execl, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 330, 62, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PFE/GUI/background.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 535));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
         int i = tab.getSelectedRow();

        
                 
        
        
                if(i >= 0){
                    // remove a row from jtable

                    IdFr=mode.getValueAt(i,0).toString();
                    NomFr=mode.getValueAt(i,1).toString();
                    CategFr=mode.getValueAt(i,2).toString();
                    Tel1=mode.getValueAt(i,3).toString();
                    Tel2=mode.getValueAt(i,4).toString();
                    Fax1=mode.getValueAt(i,5).toString();
                    Fax2=mode.getValueAt(i,6).toString();
                    adresse=mode.getValueAt(i,7).toString();;

            ajout_modif_fr    a =  new ajout_modif_fr(1, IdFr, NomFr, CategFr, Tel1, Tel2, Fax1, Fax2, adresse,(String) list.getSelectedItem(),saisir.getText());
            
            a.setVisible(true);
           
                   
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   
                     
                     
                     
                     
                }
                
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_modifierActionPerformed

    private void FermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FermerActionPerformed
        this.dispose();
    }//GEN-LAST:event_FermerActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        
                        String   choix=(String)list.getSelectedItem();

        
        if(!saisir.getText().isEmpty()){
            saisir.setBorder(BorderFactory.createLineBorder(new Color(45,118,223)));


                if(choix.equals("Id Fr")){
                    AffichIdFr(saisir.getText());                
                }else if(choix.equals("Nom Fr")){
                    AffichNomFr(saisir.getText());
                }else if(choix.equals("Categorie Fr")){
                    AffichCategFr(saisir.getText());
                }
        
                
        } else if(choix.equals("Toutes Fr")){
            
           saisir.setBorder(BorderFactory.createLineBorder(new Color(45,118,223)));

                    saisir.setText("");
                    AffichToutesFr();
                }       
                
        else{
            mode.setRowCount(0);
            saisir.setBorder(BorderFactory.createLineBorder(Color.RED));

        }
        
        
    }//GEN-LAST:event_searchActionPerformed

    private void pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfActionPerformed
        // TODO add your handling code here:
        
        
   if(mode.getRowCount()>=1){              
         try {
  Document document = new Document();
  
  
JFileChooser fileChooser = new JFileChooser();
fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
fileChooser.showOpenDialog(null);
File selectedFile = fileChooser.getSelectedFile();
String  file=selectedFile.getAbsolutePath();
if(!selectedFile.getAbsolutePath().endsWith(".pdf")){
 file=selectedFile.getAbsolutePath()+".pdf";  
}
  
  
 
  PdfWriter.getInstance(document, new FileOutputStream(file,true));
  document.open();
   float fntSize;
     fntSize = 10.0f;

  
 com.itextpdf.text.Image   image=com.itextpdf.text.Image.getInstance("C:\\Users\\HP\\Desktop\\Documents\\NetBeansProjects\\Acceuil\\src\\main\\images\\logo_4.png");
  image.setWidthPercentage(100);
  image.setAlignment(Element.ALIGN_LEFT);
  document.add(image);


  Paragraph   p3 =  new Paragraph("\n\n   Les Informations de  Fournisseur      ", new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN,14));
  p3.setAlignment(Element.ALIGN_CENTER);
  document.add(p3) ;
  
  


  PdfPTable table =  new PdfPTable(8);
  
  table.setWidthPercentage(105);
  table.setHorizontalAlignment(Element.ALIGN_BOTTOM);
  PdfPCell cel1;
  table.setWidths(new float[] { 58, 70,60, 60,60, 60,60, 100 });
    com.itextpdf.text.Font font = FontFactory.getFont(FontFactory.TIMES_ROMAN, 10, Font.BOLD, BaseColor.WHITE);
    com.itextpdf.text.Font font2 = FontFactory.getFont(FontFactory.TIMES_ROMAN, fntSize);

    
    
    
    
    
    
    
    
            cel1 = new PdfPCell(new Phrase("Id Fr", font));
            cel1.setFixedHeight(20);
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
      
            
            
    
                       
            
            cel1 = new PdfPCell(new Phrase("Nom Fr", font));
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
            
            cel1 = new PdfPCell(new Phrase("Categorie Fr", font));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
            
            
            
            
            
            cel1 = new PdfPCell(new Phrase("N¬∞ Tel1 Fr", font));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
            
            
            cel1 = new PdfPCell(new Phrase("N¬∞ Tel1", font));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE); 
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
            
             cel1 = new PdfPCell(new Phrase("N¬∞ Fax1", font));
             cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
             cel1.setBackgroundColor(BaseColor.GRAY);
             cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
             table.addCell(cel1);
            
            
            cel1 = new PdfPCell(new Phrase("N¬∞ Fax Fr", font));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
            
            
            
            cel1 = new PdfPCell(new Phrase("Adresse Fr", font));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);          
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
  
  
  
    String  ch =   (String) list.getSelectedItem();
    if(ch.equals("Id Fr")){

   Fournisseur f=(Fournisseur) fr.RechIdFr(saisir.getText());;
   if(f!=null){
   table.getDefaultCell().setVerticalAlignment(ALIGN_MIDDLE);
      
   
   
   
   
   
   
   
   
   
   
   
     cel1 = new PdfPCell(new Phrase(f.getIdFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
   
   
              cel1 = new PdfPCell(new Phrase(f.getNomFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getCategFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
    cel1 = new PdfPCell(new Phrase(f.getFax1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
   cel1 = new PdfPCell(new Phrase(f.getFax2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   cel1 = new PdfPCell(new Phrase(f.getAdresse(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   
   
   
   
   
   
   
   
   
   
   
   

          JOptionPane.showMessageDialog(null, "PDF a √©te enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);

   }   
   

                    
                }
   
   
   else  if(ch.equals("Nom Fr")){
                    
      ArrayList <Fournisseur>frs=fr.RechNomFr(saisir.getText());
     if(frs!=null){
      for(Fournisseur  f :  frs){
     
     
   
   
   
     cel1 = new PdfPCell(new Phrase(f.getIdFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
   
   
              cel1 = new PdfPCell(new Phrase(f.getNomFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getCategFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
    cel1 = new PdfPCell(new Phrase(f.getFax1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
   cel1 = new PdfPCell(new Phrase(f.getFax2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   cel1 = new PdfPCell(new Phrase(f.getAdresse(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   
   
   
      
      
      
      
      
      
      }               
      JOptionPane.showMessageDialog(null, "PDF a √©te enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);
         
     }         



                }else  if(ch.equals("Categorie Fr")){

     ArrayList <Fournisseur>l_frs=fr.RechCategFr(saisir.getText());
     if(l_frs!=null){
      for(Fournisseur  f :  l_frs){
     
      
   
   
   
     cel1 = new PdfPCell(new Phrase(f.getIdFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
   
   
              cel1 = new PdfPCell(new Phrase(f.getNomFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getCategFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
    cel1 = new PdfPCell(new Phrase(f.getFax1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
   cel1 = new PdfPCell(new Phrase(f.getFax2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   cel1 = new PdfPCell(new Phrase(f.getAdresse(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   
   
   
      }
          JOptionPane.showMessageDialog(null, "PDF a √©te enregistrer  ");}
 
                    
                    
                    
                    
                }
                
                
                
                else {
                        
         
     ArrayList <Fournisseur>list_frs=fr.RechToutesFr();
     if(list_frs!=null){
      for(Fournisseur  f :  list_frs){
    
   
   
   
     cel1 = new PdfPCell(new Phrase(f.getIdFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
   
   
              cel1 = new PdfPCell(new Phrase(f.getNomFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getCategFr(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
          
     cel1 = new PdfPCell(new Phrase(f.getTel2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
    cel1 = new PdfPCell(new Phrase(f.getFax1(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
   cel1 = new PdfPCell(new Phrase(f.getFax2(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   cel1 = new PdfPCell(new Phrase(f.getAdresse(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
             
   
   
   
   
      }
         
         
                                  JOptionPane.showMessageDialog(null, "PDF a √©te enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);

         
         
         
                        }
 }
  
  
  
   
   
   
   
   
   
   
   

   
   
   
   
    document.add( new Phrase("\n") );

    document.add(table);
    document.add( Chunk.NEWLINE );

SimpleDateFormat simpleFormatter = new SimpleDateFormat("      '        ' dd/MM/yyyy  hh:mm:ss  ");
String date=simpleFormatter.format(new Date());
Paragraph  p2 = new Paragraph(date,FontFactory.getFont(FontFactory.TIMES_ROMAN,12));
 p2.setAlignment(Element.ALIGN_RIGHT);
 document.add(p2);

 

 
                    
                    
                    
                    
                    
                    
                    
                    
                    

                    
                    
  
  
  
  
  
  
  
    document.close();

  
  
} catch (Exception e) {
}        
                 
                 
                 
                 
                 
                 
                 
   }               
                 
                 
                 
           

    }//GEN-LAST:event_pdfActionPerformed

    private void execlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_execlActionPerformed
        // TODO add your handling code here:
        
  
   
  if(mode.getRowCount()>=1){   
                 
    try {

 File selectedFile=null;       
JFileChooser fileChooser = new JFileChooser();
fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
fileChooser.showOpenDialog(null);
selectedFile = fileChooser.getSelectedFile();
if(selectedFile!=null){
    

 String  file=selectedFile.getAbsolutePath();
if(!selectedFile.getAbsolutePath().endsWith(".xls")){
 file=selectedFile.getAbsolutePath()+".xls";  
}
  
    WritableWorkbook workbook = Workbook.createWorkbook(new File(file));
    WritableSheet writablesheet1 = workbook.createSheet("Sheet1", 0);
    WritableFont times10pt = new WritableFont(WritableFont.TIMES, 12,WritableFont.BOLD);
    WritableFont times12pt = new WritableFont(WritableFont.TIMES, 11);
     int  rows =4;
   // Define the cell format
   WritableCellFormat  times = new WritableCellFormat(times10pt);
   WritableCellFormat  times2 = new WritableCellFormat(times12pt);
   times.setBorder(Border.ALL, BorderLineStyle.THIN, Colour.BLACK);
   times2.setBorder(Border.ALL, BorderLineStyle.THIN, Colour.BLACK);
  times.setBackground(Colour.WHITE);
  times.setAlignment(Alignment.CENTRE);
  times.setVerticalAlignment(VerticalAlignment.CENTRE);
   WritableCellFormat cellFormat = new WritableCellFormat(times);
    cellFormat.setBackground(Colour.YELLOW);
    cellFormat.setBorder(Border.ALL, BorderLineStyle.THIN);
   // Lets automatically wrap the cells
  // Create create a bold font with unterlines
   WritableFont times10ptBoldUnderline = new WritableFont(
   WritableFont.TIMES, 18, WritableFont.BOLD, false,
   UnderlineStyle.SINGLE);
   WritableCellFormat	timesBoldUnderline = new WritableCellFormat(times10ptBoldUnderline);
   // Lets automatically wrap the cells
Label label;
label = new Label(3, 1, "    La liste Des Fournisseurs", timesBoldUnderline);
 writablesheet1.addCell(label);
    
    writablesheet1.setRowView(3, 26*20);
    writablesheet1.setColumnView(1,16);
    Label label1 = new Label(0,3,"Id Fr",cellFormat);
    writablesheet1.setColumnView(1, 28);
    Label label2 = new Label(1,3,"Nom Fr",cellFormat);
    writablesheet1.setColumnView(2, 20);
    Label label3 = new Label(2,3,"Categorie Fr",cellFormat);
    writablesheet1.setColumnView(3, 25);
    Label label4 = new Label(3,3,"Numero T√©l√©phone2 Fr",cellFormat);
    writablesheet1.setColumnView(4, 25);
    Label label5 = new Label(4,3,"Numero T√©l√©phone1 Fr",cellFormat);
    writablesheet1.setColumnView(5, 18);
    Label label6 = new Label(5,3,"Numero Fax1 Fr",cellFormat);
    writablesheet1.setColumnView(6, 18);
    Label label7 = new Label(6,3,"Numero Fax2 Fr",cellFormat);
    writablesheet1.setColumnView(7, 50);
    Label label8 = new Label(7,3,"Adresse Fr",cellFormat);  
    
    
    writablesheet1.addCell(label1);
    writablesheet1.addCell(label2);
    writablesheet1.addCell(label3);
    writablesheet1.addCell(label4);
    writablesheet1.addCell(label5);
    writablesheet1.addCell(label6);
    writablesheet1.addCell(label7);
    writablesheet1.addCell(label8);

    
    
        
        
        
    String  ch =   (String) list.getSelectedItem();
    if(ch.equals(" Id Fr")){

   Fournisseur f=(Fournisseur) fr.RechIdFr(saisir.getText());;
   if(f!=null && tab.getRowCount()>=0){
  
   
       
     writablesheet1.addCell(new Label(0,4,f.getIdFr(),times2));
     writablesheet1.addCell(new Label(1,4,f.getNomFr(),times2));
     writablesheet1.addCell(new Label(2,4,f.getCategFr(),times2));
     writablesheet1.addCell(new Label(3,4,f.getTel1(),times2));
     writablesheet1.addCell(new Label(4,4,f.getTel2(),times2));
     writablesheet1.addCell(new Label(5,4,f.getFax1(),times2));
     writablesheet1.addCell(new Label(6,4,f.getFax2(),times2));
     writablesheet1.addCell(new Label(7,4,f.getAdresse(),times2));

       
       
       
       
       
       
                   rows=0;

   JOptionPane.showMessageDialog(null, "Excel a √©te enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);

   }   
   

                    
                }
   else  if(ch.equals(" Nom Fr")){
                     
      ArrayList <Fournisseur>frs=fr.RechNomFr(saisir.getText());
     if(frs!=null && tab.getRowCount()>=1){
      for(Fournisseur  f :  frs){
     writablesheet1.setColumnView(0,16); 
     writablesheet1.addCell(new Label(0,rows,f.getIdFr(),times2));
     writablesheet1.setColumnView(2,28);
     writablesheet1.addCell(new Label(1,rows,f.getNomFr(),times2));
     writablesheet1.setColumnView(2,20);

     writablesheet1.addCell(new Label(2,rows,f.getCategFr(),times2));
     writablesheet1.setColumnView(3,25);
     writablesheet1.addCell(new Label(3,rows,f.getTel1(),times2));
     writablesheet1.setColumnView(4,25);
     writablesheet1.addCell(new Label(4,rows,f.getTel2(),times2));
     writablesheet1.setColumnView(5,18);
     writablesheet1.addCell(new Label(5,rows,f.getFax1(),times2));
     writablesheet1.setColumnView(6,18);
     writablesheet1.addCell(new Label(6,rows,f.getFax2(),times2));
     writablesheet1.setColumnView(7,50);
     writablesheet1.addCell(new Label(7,rows,f.getAdresse(),times2));

       
      rows++;
      
      
      
      
      
      
      }  
                  rows=0;

      JOptionPane.showMessageDialog(null, "Excel a √©te enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);

     }         


                }
    
    
    
    
    
    
    else  if(ch.equals(" Categorie Fr")){
    ArrayList <Fournisseur>frs=fr.RechCategFr(saisir.getText());
     if(frs!=null && tab.getRowCount()>=1){
      for(Fournisseur  f :  frs){
     writablesheet1.setColumnView(0,16); 
     writablesheet1.addCell(new Label(0,rows,f.getIdFr(),times2));
     writablesheet1.setColumnView(2,28);
     writablesheet1.addCell(new Label(1,rows,f.getNomFr(),times2));
     writablesheet1.setColumnView(2,20);

     writablesheet1.addCell(new Label(2,rows,f.getCategFr(),times2));
     writablesheet1.setColumnView(3,25);
     writablesheet1.addCell(new Label(3,rows,f.getTel1(),times2));
     writablesheet1.setColumnView(4,25);
     writablesheet1.addCell(new Label(4,rows,f.getTel2(),times2));
     writablesheet1.setColumnView(5,18);
     writablesheet1.addCell(new Label(5,rows,f.getFax1(),times2));
     writablesheet1.setColumnView(6,18);
     writablesheet1.addCell(new Label(6,rows,f.getFax2(),times2));
     writablesheet1.setColumnView(7,50);
     writablesheet1.addCell(new Label(7,rows,f.getAdresse(),times2));

       
      rows++;
      
      
      
      
      
      
      }  
                  rows=0;

      JOptionPane.showMessageDialog(null, "Excel a √©te enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);

     }         


                    
                }
                
                
                
                else {
                        
     ArrayList <Fournisseur>frs=fr.RechToutesFr();
     if(frs!=null && tab.getRowCount()>=1){
      for(Fournisseur  f :  frs){
     writablesheet1.setColumnView(0,16); 
     writablesheet1.addCell(new Label(0,rows,f.getIdFr(),times2));
     writablesheet1.setColumnView(2,28);
     writablesheet1.addCell(new Label(1,rows,f.getNomFr(),times2));
     writablesheet1.setColumnView(2,20);
     writablesheet1.addCell(new Label(2,rows,f.getCategFr(),times2));
     writablesheet1.setColumnView(3,25);
     writablesheet1.addCell(new Label(3,rows,f.getTel1(),times2));
     writablesheet1.setColumnView(4,25);
     writablesheet1.addCell(new Label(4,rows,f.getTel2(),times2));
     writablesheet1.setColumnView(5,18);
     writablesheet1.addCell(new Label(5,rows,f.getFax1(),times2));
     writablesheet1.setColumnView(6,18);
     writablesheet1.addCell(new Label(6,rows,f.getFax2(),times2));
     writablesheet1.setColumnView(7,50);
     writablesheet1.addCell(new Label(7,rows,f.getAdresse(),times2));

       
      rows++;
      
      
      
      
      
      
      }  
                  rows=0;

      JOptionPane.showMessageDialog(null, "Excel a √©te enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);

     }         


 }
  
  
  
   
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    workbook.write();
    workbook.close();
    
}   
    
} catch (WriteException e) {
  JOptionPane.showMessageDialog(null, e);

}                catch (IOException ex) {        
                 }        
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
  
        
        
        
        
        
        
        
        
        
        
        
  }  
        
    }//GEN-LAST:event_execlActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        
        
        
             int i = tab.getSelectedRow();
                if(i >= 0){
                    // remove a row from jtable

                    IdFr=mode.getValueAt(i,0).toString();

                    JLabel message = new JLabel("Veuillez Supprimer Ce Fournisseur    ");
                    JLabel title = new JLabel("Message Information !");
                    UIManager.put("OptionPane.buttonFont",new Font("Times New Roman ",0,12));
                    message.setFont(new Font("Times New Roman", 0, 14));
                    title.setFont(new Font("Times New Roman", 0, 14));

                    if( JOptionPane.showConfirmDialog(null, message,title.getText(),JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION){

                        fr.SuppFr(IdFr);
                        mode.removeRow(i);

                    }

                }
               
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_supprimerActionPerformed

    private void saisirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saisirActionPerformed
        // TODO add your handling code here:
        
        saisir.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
               String  choix=(String)list.getSelectedItem();
              if(choix.equals("Id Fr")){
                    AffichIdFr(saisir.getText());                
                }else if(choix.equals("Nom Fr")){
                    AffichNomFr(saisir.getText());
                }else if(choix.equals("Categorie Fr")){
                    AffichCategFr(saisir.getText());
                }else if(choix.equals("Toutes Fr")){
                    saisir.setText("");
                    AffichToutesFr();
                }        
                
                
                
                
                
                
                
                
                
                
                
                
                
            }
        });

    }//GEN-LAST:event_saisirActionPerformed


    
     
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updatefr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updatefr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updatefr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updatefr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               new updatefr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Fermer;
    private javax.swing.JButton execl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> list;
    private javax.swing.JButton modifier;
    private javax.swing.JButton pdf;
    private javax.swing.JTextField saisir;
    private javax.swing.JButton search;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}
