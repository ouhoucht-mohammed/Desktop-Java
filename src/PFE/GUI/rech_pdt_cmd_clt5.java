/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PFE.GUI;

import static PFE.GUI.rech_cmd_clt7.AffichToutesCmdClt;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import jxl.Workbook;
import jxl.format.Alignment;
import jxl.format.BorderLineStyle;
import jxl.format.Colour;
import jxl.format.UnderlineStyle;
import jxl.format.VerticalAlignment;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author MOHAMED
 */
public class rech_pdt_cmd_clt5 extends javax.swing.JFrame {

    /**
     * Creates new form rech_pdt_cmd_clt5
     */
    
    
    private  static DefaultTableModel    mode;
    private  static Object[] row4_2 = new Object[3];
    private static   int  tr=0;
    private  static CmdCltPrd   cmdcltpdt =  new CmdCltPrd();
    private  String    IdCmdClt;
    private  String    IdPdt;
    private  double    QteCmdClt;

    
    
    
    public rech_pdt_cmd_clt5() {
        initComponents();
        mode=(DefaultTableModel)  tab.getModel();
        AffichToutesCmdCltPdt();
        
        
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        pdf = new javax.swing.JButton();
        excel = new javax.swing.JButton();
        fermer = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identifiant de La commande de clt", "Identifiant du pdt", "Quantité Commondé"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 770, 300));

        pdf.setText("PDF");
        pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfActionPerformed(evt);
            }
        });
        getContentPane().add(pdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 90, 80, 30));

        excel.setText("EXCEL");
        excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelActionPerformed(evt);
            }
        });
        getContentPane().add(excel, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 130, 80, 30));

        fermer.setText("Fermer");
        fermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerActionPerformed(evt);
            }
        });
        getContentPane().add(fermer, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 380, 130, 30));

        modifier.setText("Modifier");
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });
        getContentPane().add(modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, 130, 30));

        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        getContentPane().add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 130, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PFE/GUI/background.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 942, 437));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelActionPerformed




                 if(mode.getRowCount()>=1){
    try {

File selectedFile=null;       
JFileChooser fileChooser = new JFileChooser();
fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
fileChooser.showOpenDialog(null);
selectedFile = fileChooser.getSelectedFile();
if(selectedFile!=null){
    

 String  file=selectedFile.getAbsolutePath();
if(!selectedFile.getAbsolutePath().endsWith(".xls")){
 file=selectedFile.getAbsolutePath()+".xls";  
}
  
    WritableWorkbook workbook = Workbook.createWorkbook(new File(file));
    WritableSheet writablesheet1 = workbook.createSheet("Sheet1", 0);
    WritableFont times10pt = new WritableFont(WritableFont.TIMES, 12,WritableFont.BOLD);
    WritableFont times12pt = new WritableFont(WritableFont.TIMES, 11);

    
    
    int  rows =6;
   // Define the cell format
   WritableCellFormat  times = new WritableCellFormat(times10pt);
   WritableCellFormat  times2 = new WritableCellFormat(times12pt);
   times.setBorder(jxl.format.Border.ALL, BorderLineStyle.THIN, Colour.BLACK);
   times2.setBorder(jxl.format.Border.ALL, BorderLineStyle.THIN, Colour.BLACK);
   times.setBackground(Colour.WHITE);
   times.setAlignment(Alignment.CENTRE);
   times.setVerticalAlignment(VerticalAlignment.CENTRE);
   times2.setWrap(true);
   
   times2.setAlignment(Alignment.CENTRE);
   times2.setVerticalAlignment(VerticalAlignment.CENTRE);
   WritableCellFormat cellFormat = new WritableCellFormat(times);
   cellFormat.setBackground(Colour.YELLOW);
   cellFormat.setBorder(jxl.format.Border.ALL, BorderLineStyle.THIN);
   // Lets automatically wrap the cells
   // Create create a bold font with unterlines
   WritableFont times10ptBoldUnderline = new WritableFont(
   WritableFont.TIMES, 12, WritableFont.BOLD, false,
   UnderlineStyle.SINGLE);
   // Lets automatically wrap the cells

  Label label;
   Clt clt = new Clt();
   label = new Label(2, 0, "           Stock  Super Marché  ", new WritableCellFormat(new WritableFont(
   WritableFont.TIMES, 16, WritableFont.BOLD)));
   writablesheet1.addCell(label);
  







   label = new Label(2, 3, "La Liste Des  Commandes  Des Clients ", new WritableCellFormat(new WritableFont(
   WritableFont.TIMES, 14, WritableFont.BOLD)));
   writablesheet1.addCell(label);
    
   


   
   
   
   
   writablesheet1.setRowView(5, 26*24);
   
   
   writablesheet1.setColumnView(1,35);
   Label label1 = new Label(1,5,"Identifiant de La Commande ",cellFormat);
   
  writablesheet1.setColumnView(2, 35);
   Label label20 = new Label(2,5,"Identifiant du Produit",cellFormat);   
   
   writablesheet1.setColumnView(3, 35);
   Label label2 = new Label(3,5,"Quantité Commandée",cellFormat);

     
   
   
    
   
   
  
    writablesheet1.addCell(label1);
    writablesheet1.addCell(label20);
    writablesheet1.addCell(label2);

    
    
    
    
    
     ArrayList   <CmdCltPrd> list =cmdcltpdt.RechToutesCmdCltPdt();

     

    for(CmdCltPrd   cmdCltpdt :  list){        

        
     writablesheet1.setColumnView(0,30); 
     writablesheet1.addCell(new Label(1,rows,cmdCltpdt.getIdCmdClt(),times2));
     
     
     
     writablesheet1.setColumnView(1,30); 
     writablesheet1.addCell(new Label(2,rows,cmdCltpdt.getIdPdt(),times2));
     
          
     
     writablesheet1.setColumnView(2,30);
     writablesheet1.addCell(new Label(3,rows,cmdCltpdt.getQteCmdClt()+"",times2));
     
     
     
   
        
        
      rows++;  
        
        
        
        
    }            
              
          
    
   
    
         JOptionPane.showMessageDialog(null, "Excel a éte enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);

   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    workbook.write();
    workbook.close();
    
}}  
    
catch (WriteException e) {
    JOptionPane.showMessageDialog(null, e);}
catch (IOException ex) {}        
                         
                 
                 
                 
           }      
                 
                 
                 
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
                
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_excelActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed







       int i = tab.getSelectedRow();

        
                 
        
        
                if(i >= 0){
                    // remove a row from jtable

                    IdCmdClt=mode.getValueAt(i,0).toString();
                    IdPdt=mode.getValueAt(i,1).toString();
                    QteCmdClt=Double.parseDouble(mode.getValueAt(i,2).toString());
                   

            new ajout_modif_pdt_cmd_clt(1, IdCmdClt,IdPdt, QteCmdClt,"rech_pdt_cmd_clt5").setVisible(true);
            
           
                   
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   
                     
                     
                     
                     
                }














    }//GEN-LAST:event_modifierActionPerformed

    private void fermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_fermerActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        
        
        
        
        
        
        
        
          int i = tab.getSelectedRow();
                if(i >= 0){
                    // remove a row from jtable

                   String IdCmdClt=mode.getValueAt(i,0).toString();
                   String IdPdt=mode.getValueAt(i,1).toString();

                    JLabel message = new JLabel("Veuillez Supprimer Cette  Commande Clt    ");
                    JLabel title = new JLabel("Message Information !");
                    UIManager.put("OptionPane.buttonFont",new Font("Times New Roman ",0,12));
                    message.setFont(new Font("Times New Roman", 0, 14));
                    title.setFont(new Font("Times New Roman", 0, 14));

                    if( JOptionPane.showConfirmDialog(null, message,title.getText(),JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION){

                        cmdcltpdt.SuppCmdCltPdt(IdPdt,IdCmdClt);
                        AffichToutesCmdCltPdt();
                    }

                }
        
        
        
        
        
        
    }//GEN-LAST:event_supprimerActionPerformed

    private void pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfActionPerformed
        // TODO add your handling code here:
        
        
        
       
         if(mode.getRowCount()>=1){             
         try {
   Document document = new Document();
  
  
JFileChooser fileChooser = new JFileChooser();
fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
fileChooser.showOpenDialog(null);
File selectedFile = fileChooser.getSelectedFile();
String  file=selectedFile.getAbsolutePath();
if(!selectedFile.getAbsolutePath().endsWith(".pdf")){
 file=selectedFile.getAbsolutePath()+".pdf";  
}
  
  
 
  PdfWriter.getInstance(document, new FileOutputStream(file));
  document.open();
  float fntSize;
  Clt  clt = new Clt();
     
   fntSize = 10.0f;
  Image   image=Image.getInstance("C:\\Users\\HP\\Desktop\\Documents\\NetBeansProjects\\Acceuil\\src\\main\\images\\logo_4.png");
  image.setWidthPercentage(100);
  image.setAlignment(Element.ALIGN_LEFT);
  document.add(image);


  
    document.add( Chunk.NEWLINE );

  Paragraph   p5 =  new Paragraph("   La Liste Des Commandes  Des Clients      ", new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN, 14));
  p5.setAlignment(Element.ALIGN_CENTER);
  document.add(p5);
  PdfPTable table =  new PdfPTable(3);
  table.setWidthPercentage(105);
  table.setHorizontalAlignment(Element.ALIGN_BOTTOM);
  PdfPCell cel1;
  table.setWidths(new float[] {182,182,182 });
  com.itextpdf.text.Font font = FontFactory.getFont(FontFactory.TIMES_ROMAN, 10, Font.BOLD, BaseColor.WHITE);
  com.itextpdf.text.Font font2 = FontFactory.getFont(FontFactory.TIMES_ROMAN, fntSize);

       
  
  
  
  cel1 = new PdfPCell(new Phrase(" Identifiant de La Commande Clt ", font));
            cel1.setFixedHeight(20);
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
      
            
            
cel1 = new PdfPCell(new Phrase(" Identifiant du Produit ", font));
            cel1.setFixedHeight(20);
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
      


            
 cel1 = new PdfPCell(new Phrase(" Quantité Commondée ", font));
            cel1.setBackgroundColor(BaseColor.GRAY);
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
            
          
                   
              
              
    ArrayList <CmdCltPrd>  list =cmdcltpdt.RechToutesCmdCltPdt();
    
    
    
    
    
    
  
    for(CmdCltPrd  cmdcltpdt :list){
        
        
            
     cel1 = new PdfPCell(new Phrase(cmdcltpdt.getIdCmdClt(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
      

      cel1 = new PdfPCell(new Phrase(cmdcltpdt.getIdPdt(), font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);      
      cel1 = new PdfPCell(new Phrase(cmdcltpdt.getQteCmdClt()+"", font2));
            cel1.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cel1);
      
     
            
            
    
          
    }
   
             
              
                   
              
              
              
              
              
              
              
                 
            
         
                   
   JOptionPane.showMessageDialog(null, "PDF a éte enregistrer  ","Message Information",JOptionPane.INFORMATION_MESSAGE);
        
            
            
     
            
            
            
            

   
   
   
   
    document.add( new Phrase("\n") );
    document.add(table);
    document.add( Chunk.NEWLINE );

 SimpleDateFormat simpleFormatter = new SimpleDateFormat("         dd/MM/yyyy  hh:mm:ss");
 String date=simpleFormatter.format(new Date());
 Paragraph  p2 = new Paragraph(date,FontFactory.getFont(FontFactory.TIMES_ROMAN,12));
 p2.setAlignment(Element.ALIGN_RIGHT);
 document.add(p2);

   
  
    document.close();

  
  
} catch (Exception e) {
}        
                 
                 
                 
     }               
                 
                 
                 
                 
                   
        
        
        
        
        
        
        
        
        
        
        
   
        
    }//GEN-LAST:event_pdfActionPerformed

    
    
    
    
    public  static void AffichToutesCmdCltPdt (){
        
        
        
         
        
    if(tr==0){  
      
      if(cmdcltpdt.RechToutesCmdCltPdt()!=null){
  
 
  ArrayList <CmdCltPrd>  list=cmdcltpdt.RechToutesCmdCltPdt();
  
 
    for(CmdCltPrd   cmdclt : list){
     
        
     row4_2[0]=cmdclt.getIdCmdClt();
     row4_2[1]=cmdclt.getIdPdt();
     row4_2[2]=cmdclt.getQteCmdClt();
    
     
      mode.addRow(row4_2);   
        
        
        
   
        }           
                  
          
          
          
          
          
          
   

            
     }else{
          
        mode.setRowCount(0);
    
    
     JLabel message = new JLabel("La Liste  est Vide ");
     JLabel title = new JLabel("Message Information !");
     UIManager.put("OptionPane.okButtonText", " Oui");
     UIManager.put("OptionPane.buttonFont", new Font("Times New Roman ",0,12)); 
     JOptionPane.showMessageDialog(null, message,title.getText(),JOptionPane.INFORMATION_MESSAGE);
          
      }
      tr=1;    
      return ;
           
 

            
            
            
        }else if(tr==1){
        tr=0;
        mode.setRowCount(0);
        AffichToutesCmdCltPdt();
       
        
        
        
        
        
        
    }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rech_pdt_cmd_clt5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rech_pdt_cmd_clt5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rech_pdt_cmd_clt5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rech_pdt_cmd_clt5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rech_pdt_cmd_clt5().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton excel;
    private javax.swing.JButton fermer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifier;
    private javax.swing.JButton pdf;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}
